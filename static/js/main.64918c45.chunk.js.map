{"version":3,"sources":["api.ts","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getTodos","TodoInfo","todo","onDatails","className","id","completed","title","type","onClick","TodoList","todos","showDatails","map","classNames","TodoFilter","filterTodos","useState","valueInput","setValueInput","selectValue","setSelectValue","value","onChange","event","currentTarget","placeholder","style","pointerEvents","Loader","TodoModal","user","closeModal","href","email","name","App","visibleTodos","setVisibleTodos","isActiveTodoList","setIsActiveTodoList","setUser","selectedTodo","isActive","activeModal","setActiveModal","useEffect","finally","filterBy","search","copyTodo","filter","toLowerCase","includes","filteredTodos","userId","userFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.64918c45.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import { FC } from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo,\n  onDatails: (todo: Todo) => void,\n};\n\nexport const TodoInfo: FC<Props> = ({ todo, onDatails }) => (\n  <>\n    <td className=\"is-vcentered\">{todo.id}</td>\n    <td className=\"is-vcentered\">\n      {todo.completed && (\n        <span className=\"icon\" data-cy=\"iconCompleted\">\n          <i className=\"fas fa-check\" />\n        </span>\n      )}\n    </td>\n    <td className=\"is-vcentered is-expanded\">\n      <p\n        className={todo.completed\n          ? 'has-text-success'\n          : 'has-text-danger'}\n      >\n        {todo.title}\n      </p>\n    </td>\n    <td className=\"has-text-right is-vcentered\">\n      <button\n        data-cy=\"selectButton\"\n        className=\"button\"\n        type=\"button\"\n        onClick={() => onDatails(todo)}\n      >\n        <span className=\"icon\">\n          <i className=\"far fa-eye\" />\n        </span>\n      </button>\n    </td>\n  </>\n);\n","import { FC } from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n  showDatails: (todo: Todo) => void,\n};\n\nexport const TodoList: FC<Props> = ({ todos, showDatails }) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map((todo) => (\n        <tr\n          key={todo.id}\n          data-cy=\"todo\"\n          className={classNames({\n            'has-background-info-light': false,\n          })}\n        >\n          <TodoInfo todo={todo} onDatails={showDatails} />\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import { FC, useState } from 'react';\n\ntype Props = {\n  filterTodos: (value: string, search: string) => void,\n};\n\nexport const TodoFilter: FC<Props> = ({ filterTodos }) => {\n  const [valueInput, setValueInput] = useState('');\n  const [selectValue, setSelectValue] = useState('all');\n\n  const hendlerInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    filterTodos(selectValue, event.currentTarget.value);\n    setValueInput(event.currentTarget.value);\n  };\n\n  const hendlerSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    filterTodos(event.currentTarget.value, valueInput);\n    setSelectValue(event.currentTarget.value);\n  };\n\n  const resetInput = () => {\n    setValueInput('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selectValue}\n            onChange={hendlerSelect}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={valueInput}\n          onChange={hendlerInput}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {valueInput === '' || (\n            /* eslint-disable-next-line jsx-a11y/control-has-associated-label */\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={resetInput}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { FC } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  user: User | null,\n  todo: Todo | null,\n  closeModal: () => void,\n};\n\nexport const TodoModal: FC<Props> = ({\n  user,\n  todo,\n  closeModal,\n}) => {\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n      {user === null ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {todo?.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={closeModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo?.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport { getTodos, getUser } from './api';\n\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\ntype ActiveModal = {\n  selectedTodo: Todo | null,\n  isActive: boolean,\n};\n\nconst filterTodos = (todos: Todo[], filterBy: string, search: string) => {\n  let copyTodo = [...todos];\n\n  if (filterBy !== 'all') {\n    copyTodo = todos.filter(({ completed }) => (\n      completed !== (filterBy === 'completed')\n    ));\n  }\n\n  return copyTodo.filter(({ title }) => {\n    if (search !== '') {\n      return title.toLowerCase().includes(search.toLowerCase());\n    }\n\n    return true;\n  });\n};\n\nexport const App: React.FC = () => {\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>([]);\n  const [isActiveTodoList, setIsActiveTodoList] = useState<boolean>(false);\n  const [user, setUser] = useState<User | null>(null);\n  const [activeModal, setActiveModal] = useState<ActiveModal>({\n    selectedTodo: null,\n    isActive: false,\n  });\n\n  useEffect(() => {\n    getTodos()\n      .then((todos) => {\n        setVisibleTodos(todos);\n      })\n      .finally(() => setIsActiveTodoList(true));\n  }, []);\n\n  const hendlerFilterTodos = (filterBy: string, search: string) => {\n    setIsActiveTodoList(false);\n    getTodos()\n      .then((todos) => filterTodos(todos, filterBy, search))\n      .then((filteredTodos) => {\n        setVisibleTodos(filteredTodos);\n      })\n      .finally(() => setIsActiveTodoList(true));\n  };\n\n  const openModal = (todo: Todo) => {\n    getUser(todo.userId).then((userFromServer) => setUser(userFromServer));\n\n    setActiveModal({\n      selectedTodo: todo,\n      isActive: true,\n    });\n  };\n\n  const closeModal = () => {\n    setActiveModal({\n      selectedTodo: null,\n      isActive: false,\n    });\n    setUser(null);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filterTodos={hendlerFilterTodos}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!isActiveTodoList\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={visibleTodos}\n                    showDatails={openModal}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {activeModal.isActive && (\n        <TodoModal\n          user={user}\n          closeModal={closeModal}\n          todo={activeModal.selectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}